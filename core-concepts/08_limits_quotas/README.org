* Prerequisites

  The examples in this section require that project admins are allowed
  to edit resourcequotas and limitranges. In a default OpenShift
  installation this is not allowed.

  Apply the _quote-edit-role.yml_ role to the cluster, this requires
  cluster:admin permissions.

* Working with quotas and limitranges

** Quotas

  Create a quota

  #+begin_src sh
oc create -f object-quota.yml
  #+end_src

  Take a look at the quota definition

  #+begin_src sh
oc get quota
  #+end_src

  Create a new deployment

  #+begin_src sh
oc create -f deployment.yml
  #+end_src

  Scale the deployment to 2 pods

  #+begin_src sh
oc scale deployment --replicas=2 quota-test
  #+end_src

  Check the state of the deployment

  #+begin_src sh
oc get deployment
  #+end_src

  Check the state of the quota

  #+begin_src sh
oc get quota
  #+end_src

  Check events for any errors

  #+begin_src sh
oc get events
  #+end_src

  Scale the deployment to 3 pods

  #+begin_src sh
oc scale deployment --replicas=3 quota-test
  #+end_src

    Check the state of the deployment

  #+begin_src sh
oc get deployment
  #+end_src

  Check the state of the quota

  #+begin_src sh
oc get quota
  #+end_src

  Check events for any errors

  #+begin_src sh
oc get events
  #+end_src

  In which quality of service class is the pod running and why is it using that particular class?

  #+begin_src sh
oc get pod -o jsonpath='qosClass: {.status.qosClass}{"\n"}' <pod>
  #+end_src

** LimitRange

   Create a new limitrange

   #+begin_src sh
oc create -f limitrange.yml
   #+end_src

   Check the state of the new limitrange

   #+begin_src sh
oc describe limitranges  cpu-min-max-demo-lr
   #+end_src

   Create the deployment again and check the qosClass, what do you expect for the QoS class?

   #+begin_src
oc create -f deployment.yml
oc get pod -o jsonpath='qosClass: {.items[0].status.qosClass}{"\n"}' -l app=quota-test
   #+end_src

   Can you create a pod/deployment that uses the Guaranteed QoS class?

* Cleanup

  Execute:

  #+begin_src
../../utils/cleanup.sh
  #+end_src
