* Creating a sealed secret

  Take a look at the [[file:plain_secret.yml][plain_secret.yml]] file. Can you decode the secret?

  Create a sealed secret with [[file:plain_secret.yml][plain_secret.yml]] as input

  #+begin_src sh
kubeseal <plain_secret.yml > sealed_secret.json
  #+end_src

  Create the sealed secret object:

  #+begin_src sh
oc create -f sealed_secret.json
  #+end_src

  List the current secrets and sealedsecrets:

  #+begin_src
oc get sealedsecrets
oc desribe sealedsecrets
oc get secrets
  #+end_src

  Why do we have a standard K8s secret with the same name?

  Run cleanup.sh for the next example:

  #+begin_src sh
../../utils/cleanup.sh
  #+end_src

** Understanding scopes

   What is the default scope of a seal secret?

   Change the namespace name in [[file:sealed_secret.json][sealed_secret.json]] (_.metadata.name_ and _.spec.template.metadata.name_).

   Create the sealed secret with the changed namespace name

   #+begin_src sh
oc create -f sealed_secret.json
   #+end_src

   What happens to the secret?

   What is the state of the sealed secrets?

* Cleanup

  Execute:

  #+begin_src sh
../../utils/cleanup.sh
  #+end_src
